{"ast":null,"code":"var _jsxFileName = \"/Users/jacoblim/Desktop/HawkHub/frontend/src/screens/LoginScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginScreen(_ref) {\n  _s();\n  let {\n    history\n  } = _ref;\n  //an example of location is ?redirect=/shipping, this is a query string, it is used to redirect the user to the shipping page after they login\n  //an example of history is /login?redirect=/shipping, this is the path of the current page, it is used to redirect the user to the shipping page after they login\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const location = useLocation(); //useLocation is a hook that returns the location object that represents the current URL, it is similar to history, but it has more information, such as the query string\n  const navigate = useNavigate(); //useNavigate is a hook that returns a navigate function, which is used to navigate to a new location, it is similar to history.push, but it has more functionality, such as the ability to navigate to a new location without adding a new entry into the history stack, which is useful for redirects\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const userLogin = useSelector(state => state.userLogin); //get the userLogin from the state, state is the global state of the app, which is stored in the redux store, a state is a snapshot of the app at a given time\n  const {\n    error,\n    loading,\n    userInfo\n  } = userLogin; //destructure the userLogin object into loading, error, and userInfo\n\n  useEffect(() => {\n    if (userInfo) {\n      //history.push(redirect)\n      navigate(redirect);\n    }\n  }, [navigate, userInfo, redirect]); //what useEffect does here is that it first checks if userInfo exists, if it does, then it redirects the user to the redirect page, if it doesn't, then it does nothing, insert [history, userInfo, redirect] as the second argument to useEffect so that it only runs when one of these variables changes\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(login(email, password)); //dispatch the login action, which takes in the email and password as parameters\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"New Customer? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/register?redirect=${redirect}` : '/register',\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginScreen, \"6veeQBO4PbGXPw/1X7yNoeWjeKo=\", false, function () {\n  return [useDispatch, useLocation, useNavigate, useSelector];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","login","jsxDEV","_jsxDEV","LoginScreen","_ref","_s","history","email","setEmail","password","setPassword","dispatch","location","navigate","redirect","search","split","userLogin","state","error","loading","userInfo","submitHandler","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","variant","Group","controlId","Label","Control","type","placeholder","value","onChange","target","className","to","_c","$RefreshReg$"],"sources":["/Users/jacoblim/Desktop/HawkHub/frontend/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ history }) { \n  //an example of location is ?redirect=/shipping, this is a query string, it is used to redirect the user to the shipping page after they login\n  //an example of history is /login?redirect=/shipping, this is the path of the current page, it is used to redirect the user to the shipping page after they login\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n    const location = useLocation(); //useLocation is a hook that returns the location object that represents the current URL, it is similar to history, but it has more information, such as the query string\n    const navigate = useNavigate(); //useNavigate is a hook that returns a navigate function, which is used to navigate to a new location, it is similar to history.push, but it has more functionality, such as the ability to navigate to a new location without adding a new entry into the history stack, which is useful for redirects\n    const redirect = location.search ? location.search.split('=')[1] : '/' \n\n    const userLogin = useSelector(state => state.userLogin) //get the userLogin from the state, state is the global state of the app, which is stored in the redux store, a state is a snapshot of the app at a given time\n    const { error, loading, userInfo } = userLogin //destructure the userLogin object into loading, error, and userInfo\n\n    useEffect(() => {\n        if (userInfo) {\n            //history.push(redirect)\n            navigate(redirect)\n        }\n    }, [navigate, userInfo, redirect]) //what useEffect does here is that it first checks if userInfo exists, if it does, then it redirects the user to the redirect page, if it doesn't, then it does nothing, insert [history, userInfo, redirect] as the second argument to useEffect so that it only runs when one of these variables changes\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password)) //dispatch the login action, which takes in the email and password as parameters\n    }\n\n    return (\n\n        <FormContainer>\n            <h1>Sign In</h1>\n            <Form onSubmit={submitHandler}>\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />} {/*if it is loading, display the loader*/}\n                <Form.Group controlId='email'> \n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} \n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}